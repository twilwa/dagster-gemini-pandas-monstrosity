{"version":3,"file":"static/chunks/340.e68c81781fc206d0.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/launchpad/LaunchpadTabs.tsx","webpack://_N_E/../ui-core/src/launchpad/LaunchpadStoredSessionsContainer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {Box, ButtonLink, Colors, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {\n  IStorageData,\n  applyChangesToSession,\n  applyRemoveSession,\n  applySelectSession,\n} from '../app/ExecutionSessionStorage';\n\ninterface ExecutationTabProps {\n  canRemove?: boolean;\n  title: string;\n  active?: boolean;\n  onChange?: (title: string) => void;\n  onRemove?: () => void;\n  onClick: () => void;\n}\n\nconst LaunchpadTab = (props: ExecutationTabProps) => {\n  const {canRemove, title, onChange, onClick, onRemove, active} = props;\n\n  const input = React.useRef<HTMLInputElement>(null);\n  const [editing, setEditing] = React.useState(false);\n  const [value, setValue] = React.useState(title);\n\n  const onDoubleClick = React.useCallback(() => {\n    if (onChange) {\n      setEditing(true);\n    }\n  }, [onChange]);\n\n  const onClickRemove = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation();\n      onRemove && onRemove();\n    },\n    [onRemove],\n  );\n\n  const handleBlur = React.useCallback(() => {\n    setEditing(false);\n    onChange && onChange(value);\n  }, [onChange, value]);\n\n  const handleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    [],\n  );\n\n  React.useEffect(() => {\n    const el = input.current;\n    if (el && editing) {\n      el.focus();\n      el.select();\n    }\n  }, [editing]);\n\n  return (\n    <TabContainer $active={active || false} onDoubleClick={onDoubleClick} onClick={onClick}>\n      {editing ? (\n        <input\n          ref={input}\n          type=\"text\"\n          onKeyDown={(e) => e.key === 'Enter' && e.currentTarget.blur()}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={value}\n          placeholder=\"Type a tab nameâ€¦\"\n        />\n      ) : (\n        title\n      )}\n      {canRemove && !editing && onRemove ? (\n        <RemoveButton onClick={onClickRemove}>\n          <Icon name=\"close\" color={Colors.accentPrimary()} />\n        </RemoveButton>\n      ) : null}\n    </TabContainer>\n  );\n};\n\nconst REMOVE_ALL_THRESHOLD = 3;\n\ninterface LaunchpadTabsProps {\n  data: IStorageData;\n  onCreate: () => void;\n  onSave: (data: React.SetStateAction<IStorageData>) => void;\n}\n\nexport const LaunchpadTabs = (props: LaunchpadTabsProps) => {\n  const {data, onCreate, onSave} = props;\n  const {sessions} = data;\n  const sessionKeys = Object.keys(sessions);\n  const sessionCount = sessionKeys.length;\n\n  const confirm = useConfirmation();\n\n  const onApply = (mutator: any, ...args: any[]) => {\n    onSave(mutator(data, ...args));\n  };\n\n  const onRemove = async (keyToRemove: string) => {\n    if (sessionCount > 1) {\n      await confirm({\n        title: 'Remove tab?',\n        description: `The configuration for ${\n          keyToRemove && sessions[keyToRemove] ? `\"${sessions[keyToRemove]!.name}\"` : 'this tab'\n        } will be discarded.`,\n      });\n      onApply(applyRemoveSession, keyToRemove);\n    }\n  };\n\n  const onRemoveAll = async () => {\n    await confirm({\n      title: 'Remove all tabs?',\n      description: 'All configuration tabs will be discarded.',\n    });\n\n    onSave((data) => {\n      let updatedData = data;\n      sessionKeys.forEach((keyToRemove) => {\n        updatedData = applyRemoveSession(updatedData, keyToRemove);\n      });\n      return updatedData;\n    });\n  };\n\n  return (\n    <Box border=\"bottom\" padding={{top: 12}}>\n      <LaunchpadTabsContainer>\n        {sessionKeys.map((key) => (\n          <LaunchpadTab\n            canRemove={sessionCount > 1}\n            key={key}\n            active={key === data.current}\n            title={sessions[key]!.name || 'Unnamed'}\n            onClick={() => onApply(applySelectSession, key)}\n            onChange={(name) => onApply(applyChangesToSession, key, {name})}\n            onRemove={() => onRemove(key)}\n          />\n        ))}\n        <LaunchpadTab title=\"+ Add...\" onClick={onCreate} />\n        {sessionKeys.length > REMOVE_ALL_THRESHOLD ? (\n          <Box\n            background={Colors.backgroundDefault()}\n            padding={{top: 8, left: 8, right: 12}}\n            border=\"bottom\"\n            style={{position: 'sticky', right: 0}}\n          >\n            <ButtonLink color={Colors.textRed()} onClick={onRemoveAll}>\n              <Box\n                flex={{direction: 'row', gap: 4, alignItems: 'center'}}\n                style={{whiteSpace: 'nowrap'}}\n              >\n                <Icon name=\"delete\" color={Colors.textRed()} />\n                <div>Remove all</div>\n              </Box>\n            </ButtonLink>\n          </Box>\n        ) : null}\n      </LaunchpadTabsContainer>\n    </Box>\n  );\n};\n\nconst LaunchpadTabsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n  gap: 8px;\n  z-index: 1;\n  flex-direction: row;\n  padding-left: 12px;\n  overflow-x: auto;\n\n  ::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n`;\n\nconst TabContainer = styled.div<{$active: boolean}>`\n  align-items: center;\n  user-select: none;\n  padding: 8px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  white-space: nowrap;\n\n  ${({$active}) =>\n    $active\n      ? css`\n          font-weight: 600;\n          background-color: ${Colors.backgroundLighter()};\n          color: ${Colors.accentPrimary()};\n          box-shadow: ${Colors.accentPrimary()} 0 -2px 0 inset;\n        `\n      : css`\n          font-weight: normal;\n          background-color: ${Colors.backgroundLight()};\n          color: ${Colors.textLighter()};\n          box-shadow: ${Colors.accentGray()} 0 -1px 0 inset;\n\n          &:hover {\n            background-color: ${Colors.backgroundLight()};\n            box-shadow: ${Colors.accentGray()} 0 -1px 0 inset;\n            color: ${Colors.textLight()};\n          }\n        `}\n\n  &:last-child {\n    padding-right: 12px;\n  }\n\n  input {\n    background-color: transparent;\n    font-size: 13px;\n    border: 0;\n    outline: none;\n    padding: 0;\n  }\n\n  cursor: ${({$active}) => (!$active ? 'pointer' : 'inherit')};\n`;\n\nconst RemoveButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  padding: 0;\n\n  ${IconWrapper} {\n    transition: background-color 100ms;\n  }\n\n  &:hover ${IconWrapper} {\n    background-color: ${Colors.accentPrimaryHover()};\n  }\n`;\n","import LaunchpadSession from './LaunchpadSession';\nimport {LaunchpadTabs} from './LaunchpadTabs';\nimport {LaunchpadType} from './types';\nimport {\n  LaunchpadSessionPartitionSetsFragment,\n  LaunchpadSessionPipelineFragment,\n} from './types/LaunchpadAllowedRoot.types';\nimport {\n  IExecutionSessionChanges,\n  applyChangesToSession,\n  applyCreateSession,\n  useExecutionSessionStorage,\n  useInitialDataForMode,\n} from '../app/ExecutionSessionStorage';\nimport {useFeatureFlags} from '../app/Flags';\nimport {useSetStateUpdateCallback} from '../hooks/useSetStateUpdateCallback';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  launchpadType: LaunchpadType;\n  pipeline: LaunchpadSessionPipelineFragment;\n  partitionSets: LaunchpadSessionPartitionSetsFragment;\n  repoAddress: RepoAddress;\n  rootDefaultYaml: string | undefined;\n}\n\nexport const LaunchpadStoredSessionsContainer = (props: Props) => {\n  const {launchpadType, pipeline, partitionSets, repoAddress, rootDefaultYaml} = props;\n\n  const {flagDisableAutoLoadDefaults} = useFeatureFlags();\n  const initialDataForMode = useInitialDataForMode(\n    pipeline,\n    partitionSets,\n    rootDefaultYaml,\n    !flagDisableAutoLoadDefaults,\n  );\n  const [data, onSave] = useExecutionSessionStorage(repoAddress, pipeline.name, initialDataForMode);\n\n  const onCreateSession = () => {\n    onSave((data) => applyCreateSession(data, initialDataForMode));\n  };\n\n  const currentSession = data.sessions[data.current]!;\n\n  const onSaveSession = useSetStateUpdateCallback<IExecutionSessionChanges>(\n    currentSession,\n    (changes: IExecutionSessionChanges) => {\n      onSave((data) => applyChangesToSession(data, data.current, changes));\n    },\n  );\n\n  return (\n    <>\n      <LaunchpadTabs data={data} onCreate={onCreateSession} onSave={onSave} />\n      <LaunchpadSession\n        launchpadType={launchpadType}\n        session={currentSession}\n        onSave={onSaveSession}\n        pipeline={pipeline}\n        partitionSets={partitionSets}\n        repoAddress={repoAddress}\n        rootDefaultYaml={rootDefaultYaml}\n      />\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default LaunchpadStoredSessionsContainer;\n"],"names":["LaunchpadTab","props","canRemove","title","onChange","onClick","onRemove","active","input","React","editing","setEditing","value","setValue","onDoubleClick","onClickRemove","e","stopPropagation","handleBlur","handleChange","target","el","current","focus","select","jsx_runtime","jsxs","TabContainer","$active","jsx","ref","type","onKeyDown","key","currentTarget","blur","onBlur","placeholder","RemoveButton","Icon","name","color","Colors","LaunchpadTabs","data","onCreate","onSave","sessions","sessionKeys","Object","keys","sessionCount","length","confirm","useConfirmation","onApply","mutator","args","_to_consumable_array","_","_async_to_generator","keyToRemove","description","concat","_state","sent","applyRemoveSession","onRemoveAll","updatedData","forEach","Box","border","padding","top","LaunchpadTabsContainer","map","applySelectSession","applyChangesToSession","background","left","right","style","position","ButtonLink","flex","direction","gap","alignItems","whiteSpace","div","styled","withConfig","param","css","button","IconWrapper","LaunchpadStoredSessionsContainer","launchpadType","pipeline","partitionSets","repoAddress","rootDefaultYaml","flagDisableAutoLoadDefaults","useFeatureFlags","initialDataForMode","useInitialDataForMode","useExecutionSessionStorage","currentSession","onSaveSession","useSetStateUpdateCallback","changes","Fragment","applyCreateSession","LaunchpadSession","session","launchpad_LaunchpadStoredSessionsContainer"],"sourceRoot":""}
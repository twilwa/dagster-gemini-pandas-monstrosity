{"version":3,"file":"static/chunks/458.f011a031d85fce04.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/flattenCodeLocationRows.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryCountTags.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedCodeLocationRow.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryLocationsList.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPage.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {CodeLocationRowType} from '../workspace/VirtualizedCodeLocationRow';\nimport {WorkspaceLocationNodeFragment} from '../workspace/types/WorkspaceContext.types';\n\nconst flatten = (locationEntries: WorkspaceLocationNodeFragment[]) => {\n  // Consider each loaded repository to be a \"code location\".\n  const all: CodeLocationRowType[] = [];\n  for (const locationNode of locationEntries) {\n    const {locationOrLoadError} = locationNode;\n    if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n      all.push({type: 'error' as const, node: locationNode});\n    } else {\n      locationOrLoadError.repositories.forEach((repo) => {\n        all.push({type: 'repository' as const, codeLocation: locationNode, repository: repo});\n      });\n    }\n  }\n  return all;\n};\n\nconst filterBySearch = (flattened: CodeLocationRowType[], searchValue: string) => {\n  const queryString = searchValue.toLocaleLowerCase();\n  return flattened.filter((row) => {\n    if (row.type === 'error') {\n      return row.node.name.toLocaleLowerCase().includes(queryString);\n    }\n    return (\n      row.codeLocation.name.toLocaleLowerCase().includes(queryString) ||\n      row.repository.name.toLocaleLowerCase().includes(queryString)\n    );\n  });\n};\n\nexport const flattenCodeLocationRows = (\n  locationEntries: WorkspaceLocationNodeFragment[],\n  searchValue: string = '',\n) => {\n  const flattened = flatten(locationEntries);\n  const filtered = filterBySearch(flattened, searchValue);\n\n  return {\n    flattened,\n    filtered,\n  };\n};\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledRawCodeMirror,\n  Table,\n} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Libray</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nexport const RepositoryCountTags = ({\n  repo,\n  repoAddress,\n}: {\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet = ({locationNode}: Props) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.textLight()}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: ${Colors.backgroundDefault()};\n    border: none;\n    color: ${Colors.textLight()};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, Colors, JoinedButtons, MiddleTruncate} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {ImageName, LocationStatus, ModuleOrPackageOrFile, ReloadButton} from './CodeLocationRowSet';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {\n  WorkspaceLocationNodeFragment,\n  WorkspaceRepositoryFragment,\n} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {HeaderCell, RowCell} from '../ui/VirtualizedTable';\n\nexport type CodeLocationRowType =\n  | {\n      type: 'repository';\n      codeLocation: WorkspaceLocationNodeFragment;\n      repository: WorkspaceRepositoryFragment;\n    }\n  | {type: 'error'; node: WorkspaceLocationNodeFragment};\n\nconst TEMPLATE_COLUMNS = '3fr 1fr 1fr 240px 160px';\n\ninterface ErrorRowProps {\n  locationNode: WorkspaceRepositoryLocationNode;\n  index: number;\n}\n\nexport const VirtualizedCodeLocationErrorRow = React.forwardRef(\n  (props: ErrorRowProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {locationNode, index} = props;\n    const {name} = locationNode;\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <MiddleTruncate text={name} />\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={name} locationOrError={locationNode} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>{'\\u2013'}</RowCell>\n          <RowCell>\n            <JoinedButtons>\n              <ReloadButton location={name} />\n              <CodeLocationMenu locationNode={locationNode} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\ninterface Props {\n  codeLocation: WorkspaceRepositoryLocationNode;\n  repository: WorkspaceRepositoryFragment;\n  index: number;\n  // measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationRow = React.forwardRef(\n  (props: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {codeLocation, repository, index} = props;\n    const repoAddress = buildRepoAddress(repository.name, repository.location.name);\n\n    const allMetadata = [...codeLocation.displayMetadata, ...repository.displayMetadata];\n\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <Box flex={{direction: 'column', gap: 4}}>\n              <div style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress)}>\n                  <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                </Link>\n              </div>\n              <ImageName metadata={allMetadata} />\n              <ModuleOrPackageOrFile metadata={allMetadata} />\n            </Box>\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={repository.name} locationOrError={codeLocation} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={codeLocation.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n          </RowCell>\n          <RowCell style={{alignItems: 'flex-end'}}>\n            <JoinedButtons>\n              <ReloadButton location={codeLocation.name} />\n              <CodeLocationMenu locationNode={codeLocation} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\nexport const VirtualizedCodeLocationHeader = () => {\n  return (\n    <Box\n      border=\"top-and-bottom\"\n      style={{\n        display: 'grid',\n        gridTemplateColumns: TEMPLATE_COLUMNS,\n        height: '32px',\n        fontSize: '12px',\n        color: Colors.textLight(),\n      }}\n    >\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Status</HeaderCell>\n      <HeaderCell>Updated</HeaderCell>\n      <HeaderCell>Definitions</HeaderCell>\n      <HeaderCell style={{textAlign: 'right'}}>Actions</HeaderCell>\n    </Box>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n`;\n","import {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useRef} from 'react';\n\nimport {\n  CodeLocationRowType,\n  VirtualizedCodeLocationErrorRow,\n  VirtualizedCodeLocationHeader,\n  VirtualizedCodeLocationRow,\n} from './VirtualizedCodeLocationRow';\nimport {Container, DynamicRowContainer, Inner} from '../ui/VirtualizedTable';\n\ninterface Props {\n  loading: boolean;\n  codeLocations: CodeLocationRowType[];\n  searchValue: string;\n}\n\nexport const RepositoryLocationsList = ({loading, codeLocations, searchValue}: Props) => {\n  const parentRef = useRef<HTMLDivElement>(null);\n\n  const virtualizer = useVirtualizer({\n    count: codeLocations.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 64,\n    overscan: 10,\n  });\n\n  const totalHeight = virtualizer.getTotalSize();\n  const items = virtualizer.getVirtualItems();\n\n  if (loading && !codeLocations.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading…</div>\n      </Box>\n    );\n  }\n\n  if (!codeLocations.length) {\n    if (searchValue) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={\n              <div>\n                No code locations were found for search query <strong>{searchValue}</strong>.\n              </div>\n            }\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <VirtualizedCodeLocationHeader />\n      <Container ref={parentRef}>\n        <Inner $totalHeight={totalHeight}>\n          <DynamicRowContainer $start={items[0]?.start ?? 0}>\n            {items.map(({index, key}) => {\n              const row: CodeLocationRowType = codeLocations[index]!;\n              if (row.type === 'error') {\n                return (\n                  <VirtualizedCodeLocationErrorRow\n                    key={key}\n                    index={index}\n                    locationNode={row.node}\n                    ref={virtualizer.measureElement}\n                  />\n                );\n              }\n\n              return (\n                <VirtualizedCodeLocationRow\n                  key={key}\n                  index={index}\n                  codeLocation={row.codeLocation}\n                  repository={row.repository}\n                  ref={virtualizer.measureElement}\n                />\n              );\n            })}\n          </DynamicRowContainer>\n        </Inner>\n      </Container>\n    </>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading, TextInput} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {flattenCodeLocationRows} from './flattenCodeLocationRows';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nconst SEARCH_THRESHOLD = 10;\n\nexport const CodeLocationsPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onChangeSearch = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const queryString = searchValue.toLocaleLowerCase();\n  const {flattened, filtered} = React.useMemo(() => {\n    return flattenCodeLocationRows(locationEntries, queryString);\n  }, [locationEntries, queryString]);\n\n  const entryCount = flattened.length;\n  const showSearch = entryCount > SEARCH_THRESHOLD;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        {showSearch ? (\n          <TextInput\n            icon=\"search\"\n            value={searchValue}\n            onChange={onChangeSearch}\n            placeholder=\"Filter code locations by name…\"\n            style={{width: '400px'}}\n          />\n        ) : (\n          <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        )}\n        <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n          {showSearch ? <div>{`${entryCount} code locations`}</div> : null}\n          <ReloadAllButton />\n        </Box>\n      </Box>\n      <RepositoryLocationsList\n        loading={loading}\n        codeLocations={filtered}\n        searchValue={searchValue}\n      />\n    </>\n  );\n};\n\nexport const CodeLocationsPage = () => {\n  const {pageTitle} = React.useContext(InstancePageContext);\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <CodeLocationsPageContent />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n"],"names":["flatten","locationEntries","all","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_loop","locationNode","value","locationOrLoadError","__typename","repositories","forEach","repo","push","type","codeLocation","repository","node","err","return","filterBySearch","flattened","searchValue","queryString","toLocaleLowerCase","filter","row","name","includes","flattenCodeLocationRows","filtered","CodeLocationMenu","param","useState","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","dagsterLibraryVersions","jsx_runtime","jsx","MenuItem","icon","text","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","jsxs","Fragment","Popover","position","content","Menu","Button","Icon","CodeLocationConfigDialog","metadata","displayMetadata","Dialog","title","onClose","style","width","CodeLocationConfig","DialogFooter","topBorder","intent","Table","thead","tr","th","tbody","map","library","td","version","yamlString","useMemo","kvPairs","reduce","accum","item","_object_spread_props","_","_object_spread","_define_property","key","yaml","StyledRawCodeMirror","options","readOnly","lineNumbers","mode","theme","RepositoryCountTags","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Box","flex","direction","gap","alignItems","Tooltip","concat","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","styled","Link","ImageName","copy","useCopyToClipboard","imageKV","find","useCallback","_async_to_generator","showSharedToaster","message","_state","sent","ImageNameBox","span","fontWeight","display","button","MiddleTruncate","Colors","ModuleOrPackageOrFile","color","fontSize","LocationStatus","props","locationOrError","location","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","ReloadButton","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","TEMPLATE_COLUMNS","VirtualizedCodeLocationErrorRow","React","ref","index","div","data-index","RowGrid","border","RowCell","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","JoinedButtons","VirtualizedCodeLocationRow","buildRepoAddress","allMetadata","esm_to_consumable_array","repoAddressAsHumanString","VirtualizedCodeLocationHeader","gridTemplateColumns","height","HeaderCell","textAlign","RepositoryLocationsList","items","codeLocations","parentRef","useRef","virtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","getVirtualItems","padding","horizontal","Spinner","purpose","Container","Inner","$totalHeight","DynamicRowContainer","$start","start","measureElement","vertical","NonIdealState","description","strong","CodeLocationsPageContent","useTrackPageView","useDocumentTitle","WorkspaceContext","setSearchValue","onChangeSearch","e","target","entryCount","showSearch","justifyContent","TextInput","onChange","placeholder","Subheading","id","ReloadAllButton","CodeLocationsPage","pageTitle","InstancePageContext","overflow","PageHeader","Heading","tabs","InstanceTabs","tab","instance_CodeLocationsPage","useCanSeeConfig","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql"],"sourceRoot":""}
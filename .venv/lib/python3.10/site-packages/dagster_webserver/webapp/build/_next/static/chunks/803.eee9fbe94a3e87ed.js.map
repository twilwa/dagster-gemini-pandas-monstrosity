{"version":3,"file":"static/chunks/803.eee9fbe94a3e87ed.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/pipelines/PipelineRunsRoot.tsx","webpack://_N_E/../ui-core/src/runs/useCursorPaginatedQuery.tsx","webpack://_N_E/../ui-core/src/snapshots/SnapshotNav.tsx","webpack://_N_E/../ui-core/src/snapshots/SnapshotRoot.tsx","webpack://_N_E/../ui-core/src/ui/StickyTableContainer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {gql} from '@apollo/client';\nimport {\n  Box,\n  ButtonLink,\n  CursorHistoryControls,\n  Icon,\n  NonIdealState,\n  Page,\n  Tag,\n  TokenizingFieldValue,\n  tokenToString,\n} from '@dagster-io/ui-components';\nimport {useCallback, useEffect, useMemo} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {\n  PipelineRunsRootQuery,\n  PipelineRunsRootQueryVariables,\n} from './types/PipelineRunsRoot.types';\nimport {useJobTitle} from './useJobTitle';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {usePageLoadTrace} from '../performance';\nimport {RUN_TABLE_RUN_FRAGMENT, RunTable} from '../runs/RunTable';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {\n  RunFilterToken,\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  useRunsFilterInput,\n} from '../runs/RunsFilterInput';\nimport {useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\nimport {isThisThingAJob, isThisThingAnAssetJob, useRepository} from '../workspace/WorkspaceContext';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nconst PAGE_SIZE = 25;\nconst ENABLED_FILTERS: RunFilterTokenType[] = [\n  'status',\n  'tag',\n  'id',\n  'created_date_before',\n  'created_date_after',\n];\n\ninterface Props {\n  repoAddress?: RepoAddress;\n}\n\nexport const PipelineRunsRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n  const {repoAddress = null} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const trace = usePageLoadTrace('PipelineRunsRoot');\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n  const permanentTokens = useMemo(() => {\n    return [\n      isJob ? {token: 'job', value: pipelineName} : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [isJob, pipelineName, snapshotId]);\n\n  const allTokens = [...filterTokens, ...permanentTokens];\n  if (repoAddress) {\n    const repoToken = {\n      token: 'tag',\n      value: `${DagsterTag.RepositoryLabelTag}=${repoAddressAsTag(repoAddress)}`,\n    };\n    allTokens.push(repoToken);\n  }\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    PipelineRunsRootQuery,\n    PipelineRunsRootQueryVariables\n  >({\n    query: PIPELINE_RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n    variables: {\n      filter: {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId},\n    },\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.id;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n  });\n\n  const onAddTag = useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokens([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokens],\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    enabledFilters: ENABLED_FILTERS,\n    tokens: filterTokens,\n    onChange: setFilterTokens,\n    loading: queryResult.loading,\n  });\n\n  useEffect(() => {\n    if (!queryResult.loading) {\n      trace.endTrace();\n    }\n  }, [queryResult.loading, trace]);\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n      <Page>\n        <Loading queryResult={queryResult} allowStaleData={true}>\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            const runs = pipelineRunsOrError.results;\n\n            const displayed = runs.slice(0, PAGE_SIZE);\n            const {hasNextCursor, hasPrevCursor} = paginationProps;\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={displayed}\n                    onAddTag={onAddTag}\n                    actionBarComponents={\n                      <Box\n                        flex={{\n                          direction: 'row',\n                          justifyContent: 'space-between',\n                          grow: 1,\n                          alignItems: 'center',\n                          gap: 4,\n                        }}\n                        margin={{right: 8}}\n                      >\n                        {button}\n                        <QueryRefreshCountdown refreshState={refreshState} />\n                      </Box>\n                    }\n                    belowActionBarComponents={\n                      <>\n                        {permanentTokens.map(({token, value}) => (\n                          <Tag key={token}>{`${token}:${value}`}</Tag>\n                        ))}\n                        {activeFiltersJsx.length ? (\n                          <>\n                            {activeFiltersJsx}\n                            <ButtonLink\n                              onClick={() => {\n                                setFilterTokens([]);\n                              }}\n                            >\n                              Clear all\n                            </ButtonLink>\n                          </>\n                        ) : null}\n                      </>\n                    }\n                    emptyState={() => (\n                      <EmptyState\n                        repoAddress={repoAddress}\n                        anyFilter={filterTokens.length > 0}\n                        jobName={pipelineName}\n                        jobPath={pipelinePath}\n                      />\n                    )}\n                  />\n                </StickyTableContainer>\n                {hasNextCursor || hasPrevCursor ? (\n                  <div style={{marginTop: '20px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </Page>\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n\ninterface EmptyStateProps {\n  repoAddress: RepoAddress | null;\n  jobName: string;\n  jobPath: string;\n  anyFilter: boolean;\n}\n\nconst EmptyState = (props: EmptyStateProps) => {\n  const {repoAddress, anyFilter, jobName, jobPath} = props;\n\n  const repo = useRepository(repoAddress);\n  const isAssetJob = isThisThingAnAssetJob(repo, jobName);\n\n  const description = () => {\n    if (!repoAddress) {\n      return <div>You have not launched any runs for this job.</div>;\n    }\n\n    if (isAssetJob) {\n      return (\n        <Box flex={{direction: 'column', gap: 12}}>\n          <div>\n            {anyFilter\n              ? 'There are no matching runs for these filters.'\n              : 'You have not materialized any assets with this job yet.'}\n          </div>\n          <div>\n            <AnchorButton\n              icon={<Icon name=\"materialization\" />}\n              to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}`)}\n            >\n              Materialize an asset\n            </AnchorButton>\n          </div>\n        </Box>\n      );\n    }\n\n    return (\n      <Box flex={{direction: 'column', gap: 12}}>\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this job yet.'}\n        </div>\n        <div>\n          <AnchorButton\n            icon={<Icon name=\"add_circle\" />}\n            to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}/playground`)}\n          >\n            Launch a run\n          </AnchorButton>\n        </div>\n      </Box>\n    );\n  };\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState icon=\"run\" title=\"No runs found\" description={description()} />\n    </Box>\n  );\n};\n\nconst PIPELINE_RUNS_ROOT_QUERY = gql`\n  query PipelineRunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {useQuery} from '@apollo/client';\nimport {CursorPaginationProps} from '@dagster-io/ui-components';\nimport {DocumentNode} from 'graphql';\nimport {useState} from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  skip?: boolean;\n  variables: Omit<TVars, 'cursor' | 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    skip: options.skip,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","import {gql, useQuery} from '@apollo/client';\nimport {FontFamily, Heading, PageHeader, Tabs, Tag} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {SnapshotQuery, SnapshotQueryVariables} from './types/SnapshotNav.types';\nimport {ExplorerPath, explorerPathToString} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: ExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId = ''} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const {data, loading} = useQuery<SnapshotQuery, SnapshotQueryVariables>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <PageHeader\n      title={\n        <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n          {explorerPath.snapshotId?.slice(0, 8)}\n        </Heading>\n      }\n      tags={\n        <>\n          <Tag icon=\"schema\">\n            Snapshot of{' '}\n            <Link to={workspacePipelinePathGuessRepo(explorerPath.pipelineName)}>\n              {explorerPath.pipelineName}\n            </Link>\n          </Tag>\n          {tag()}\n        </>\n      }\n      tabs={\n        <Tabs selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <TabLink key={text} id={pathComponent} title={text} to={href} />;\n          })}\n        </Tabs>\n      }\n    />\n  );\n};\n","import {Route, Switch, useParams} from 'react-router-dom';\n\nimport {SnapshotNav} from './SnapshotNav';\nimport {PipelineExplorerSnapshotRoot} from '../pipelines/PipelineExplorerRoot';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsRoot} from '../pipelines/PipelineRunsRoot';\n\nexport const SnapshotRoot = () => {\n  const {pipelinePath, tab} = useParams<{\n    pipelinePath: string;\n    tab?: string;\n  }>();\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route path=\"/snapshots/:pipelinePath/runs\">\n          <PipelineRunsRoot />\n        </Route>\n        <Route path=\"/snapshots/(/?.*)\">\n          <PipelineExplorerSnapshotRoot />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SnapshotRoot;\n","import {Colors} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\ninterface Props {\n  $top?: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top = 0}) => $top}px;\n    background-color: ${Colors.backgroundDefault()};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${Colors.keylineDefault()};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n"],"names":["ENABLED_FILTERS","PipelineRunsRoot","props","useTrackPageView","pipelinePath","useParams","_props_repoAddress","repoAddress","explorerPath","explorerPathFromString","pipelineName","snapshotId","repo","useRepository","isJob","isThisThingAJob","useJobTitle","trace","usePageLoadTrace","useQueryPersistedRunFilters","filterTokens","setFilterTokens","permanentTokens","useMemo","token","value","filter","Boolean","allTokens","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_22__","_","repoToken","repoAddressAsTag","DagsterTag","RepositoryLabelTag","concat","push","useCursorPaginatedQuery","query","PIPELINE_RUNS_ROOT_QUERY","pageSize","variables","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_23__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_24__","runsFilterForSearchTokens","nextCursorForResult","runs","pipelineRunsOrError","__typename","results","PAGE_SIZE","id","getResultArray","data","queryResult","paginationProps","onAddTag","useCallback","tokenAsString","tokenToString","some","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","useRunsFilterInput","enabledFilters","tokens","onChange","loading","button","activeFiltersJsx","useEffect","endTrace","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","RunsQueryRefetchContext","Provider","refetch","Page","Loading","allowStaleData","param","Box","padding","vertical","NonIdealState","icon","title","description","message","displayed","slice","hasNextCursor","hasPrevCursor","jsxs","Fragment","StickyTableContainer","$top","RunTable","actionBarComponents","flex","direction","justifyContent","grow","alignItems","gap","margin","right","QueryRefreshCountdown","belowActionBarComponents","map","Tag","length","ButtonLink","onClick","emptyState","EmptyState","anyFilter","jobName","jobPath","div","style","marginTop","CursorHistoryControls","isAssetJob","isThisThingAnAssetJob","AnchorButton","Icon","name","to","workspacePathFromAddress","gql","RUN_TABLE_RUN_FRAGMENT","PYTHON_ERROR_FRAGMENT","options","useState","cursorStack","setCursorStack","useQueryPersistedState","queryKey","cursor","setCursor","queryVars","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_3__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__","limit","useQuery","skip","notifyOnNetworkStatusChange","resultArray","popCursor","nextStack","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_6__","pop","advanceCursor","current","nextCursor","reset","undefined","SNAPSHOT_PARENT_QUERY","SnapshotNav","_props_activeTab","activeTab","_explorerPath_snapshotId1","explorerPathString","explorerPathToString","_object_spread_props","_object_spread","opNames","currentPipelineState","useActivePipelineForName","currentSnapshotID","pipelineSnapshotId","jsx_runtime","PageHeader","Heading","fontFamily","FontFamily","monospace","fontSize","tags","Link","workspacePipelinePathGuessRepo","intent","minimal","pipelineSnapshotOrError","parentSnapshotId","tabs","Tabs","selectedTabId","text","pathComponent","href","tab","TabLink","SnapshotRoot","display","flexDirection","minWidth","width","height","Switch","Route","path","PipelineExplorerSnapshotRoot","snapshots_SnapshotRoot","styled","withConfig","_param_$top","Colors"],"sourceRoot":""}
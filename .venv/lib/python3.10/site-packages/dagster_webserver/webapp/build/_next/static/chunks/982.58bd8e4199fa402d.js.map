{"version":3,"file":"static/chunks/982.58bd8e4199fa402d.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import {Heading, Page, PageHeader} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport {useCallback, useContext, useMemo} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {buildAssetGroupSelector} from './AssetGroupSuggest';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  globalAssetGraphPathFromString,\n  globalAssetGraphPathToString,\n} from './globalAssetGraphPathToString';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector, ChangeReason} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {usePageLoadTrace} from '../performance';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nexport const AssetsGroupsGlobalGraphRoot = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {visibleRepos} = useContext(WorkspaceContext);\n  const history = useHistory();\n\n  const [filters, setFilters] = useQueryPersistedState<{\n    groups?: AssetGroupSelector[];\n    computeKindTags?: string[];\n    changedInBranch?: ChangeReason[];\n  }>({\n    encode: ({groups, computeKindTags, changedInBranch}) => ({\n      groups: groups?.length ? JSON.stringify(groups) : undefined,\n      computeKindTags: computeKindTags?.length ? JSON.stringify(computeKindTags) : undefined,\n      changedInBranch: changedInBranch?.length ? JSON.stringify(changedInBranch) : undefined,\n    }),\n    decode: (qs) => ({\n      groups: qs.groups ? JSON.parse(qs.groups) : [],\n      computeKindTags: qs.computeKindTags ? JSON.parse(qs.computeKindTags) : [],\n      changedInBranch: qs.changedInBranch ? JSON.parse(qs.changedInBranch) : [],\n    }),\n  });\n\n  useDocumentTitle(`Global Asset Lineage`);\n  const trace = usePageLoadTrace('GlobalAssetGraph');\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: globalAssetGraphPathToString(path),\n        search: history.location.search,\n      });\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        if (\n          !visibleRepos.some(\n            (repo) =>\n              repo.repositoryLocation.name === node.repository.location.name &&\n              repo.repository.name === node.repository.name,\n          )\n        ) {\n          return true;\n        }\n        if (filters.groups?.length) {\n          const nodeGroup = buildAssetGroupSelector({definition: node});\n          if (!filters.groups.some((g) => isEqual(g, nodeGroup))) {\n            return true;\n          }\n        }\n\n        if (filters.changedInBranch?.length) {\n          if (node.changedReasons.find((reason) => filters.changedInBranch!.includes(reason))) {\n            return false;\n          }\n          return true;\n        }\n\n        return false;\n      },\n    };\n    return options;\n  }, [filters, visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        filters={filters}\n        setFilters={setFilters}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={globalAssetGraphPathFromString(path)}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n        isGlobalGraph\n        trace={trace}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n"],"names":["Page","styled","div","withConfig","AssetsGroupsGlobalGraphRoot","path","useParams","visibleRepos","useContext","WorkspaceContext","history","useHistory","useQueryPersistedState","encode","param","groups","computeKindTags","changedInBranch","length","JSON","stringify","undefined","decode","qs","parse","filters","setFilters","useDocumentTitle","trace","usePageLoadTrace","onChangeExplorerPath","useCallback","mode","pathname","globalAssetGraphPathToString","search","location","onNavigateToSourceAssetNode","node","push","assetDetailsPathForKey","assetKey","view","fetchOptions","useMemo","hideEdgesToNodesOutsideQuery","hideNodesMatching","some","repo","repositoryLocation","name","repository","nodeGroup","buildAssetGroupSelector","definition","g","isEqual","changedReasons","find","reason","includes","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","style","display","flexDirection","paddingBottom","jsx","PageHeader","title","Heading","right","ReloadAllButton","label","AssetGraphExplorer","options","preferAssetRendering","explodeComposites","explorerPath","globalAssetGraphPathFromString","isGlobalGraph","__webpack_exports__"],"sourceRoot":""}
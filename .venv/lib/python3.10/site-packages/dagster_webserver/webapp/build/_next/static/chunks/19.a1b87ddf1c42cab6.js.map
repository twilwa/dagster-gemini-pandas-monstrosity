{"version":3,"file":"static/chunks/19.a1b87ddf1c42cab6.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunConfigDialog.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/useTagPinning.tsx","webpack://_N_E/../ui-core/src/runs/RunRow.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  MiddleTruncate,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={displayNameForAssetKey(assetKey)} />\n  </Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={labelForAssetCheck(assetCheck)} />\n  </Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  dialogTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={dialogTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', width: '50vw', maxWidth: '800px', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '500px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\ninterface AssetKeyTagCollectionProps {\n  assetKeys: AssetKey[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetKeyTagCollection = React.memo((props: AssetKeyTagCollectionProps) => {\n  const {assetKeys, useTags, dialogTitle = 'Assets in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {assetKeys.length} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n              {`${assetKeys.length} assets`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\ninterface AssetCheckTagCollectionProps {\n  assetChecks: Check[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetCheckTagCollection = React.memo((props: AssetCheckTagCollectionProps) => {\n  const {assetChecks, useTags, dialogTitle = 'Asset checks in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {assetChecks.length} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n              {`${assetChecks.length} asset checks`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport {memo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTable.types';\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  // Prefer user/schedule/sensor\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n    }\n  }\n\n  // If none of those, check for AMP\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(deletionDialogReducer, frozenRuns.current, initializeState);\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogFooter,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {RunTags} from './RunTags';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  copyConfig: () => void;\n  runConfigYaml: string;\n  mode: string | null;\n  isJob: boolean;\n\n  // Optionally provide tags to display them as well.\n  tags?: RunTagsFragment[];\n}\n\nexport const RunConfigDialog = (props: Props) => {\n  const {isOpen, onClose, copyConfig, runConfigYaml, tags, mode, isJob} = props;\n  const hasTags = !!tags && tags.length > 0;\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      canOutsideClickClose\n      canEscapeKeyClose\n      style={{\n        width: '90vw',\n        maxWidth: '1000px',\n        minWidth: '600px',\n        height: '90vh',\n        maxHeight: '1000px',\n        minHeight: '600px',\n      }}\n      title=\"Run configuration\"\n    >\n      <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n        <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n          {hasTags ? (\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={tags} mode={isJob ? null : mode} />\n              </div>\n            </Box>\n          ) : null}\n          <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n            {hasTags ? (\n              <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n                <Subheading>Config</Subheading>\n              </Box>\n            ) : null}\n            <CodeMirrorContainer>\n              <StyledRawCodeMirror\n                value={runConfigYaml}\n                options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n                theme={['config-editor']}\n              />\n            </CodeMirrorContainer>\n          </Box>\n        </Box>\n        <DialogFooter topBorder>\n          <Button onClick={() => copyConfig()} intent=\"none\">\n            Copy config\n          </Button>\n          <Button onClick={onClose} intent=\"primary\">\n            OK\n          </Button>\n        </DialogFooter>\n      </Box>\n    </Dialog>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {ReexecutionStrategy} from '../graphql/types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  JoinedButtons,\n  Menu,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Popover,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {RunConfigDialog} from './RunConfigDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelineLinkForRun} from '../workspace/workspacePath';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const onCopy = async () => {\n    copyConfig(runConfigYaml || '');\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  const jobLink = workspacePipelineLinkForRun({\n    run,\n    repositoryName: repoMatch?.match.repository.name,\n    repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n    isJob,\n  });\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={jobLink.disabledReason || OPEN_LAUNCHPAD_UNKNOWN}\n                  position=\"left\"\n                  disabled={infoReady && !jobLink.disabledReason}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text={jobLink.label}\n                    disabled={!infoReady || !!jobLink.disabledReason}\n                    icon={jobLink.icon}\n                    to={jobLink.to}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <RunConfigDialog\n        isOpen={visibleDialog === 'config'}\n        onClose={closeDialogs}\n        copyConfig={onCopy}\n        mode={run.mode}\n        runConfigYaml={runConfigYaml || ''}\n        isJob={isJob}\n      />\n    </>\n  );\n});\n\ninterface RunBulkActionsMenuProps {\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}\n\nexport const RunBulkActionsMenu = React.memo((props: RunBulkActionsMenuProps) => {\n  const {selected, clearSelection} = props;\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.backgroundLight()};\n  color: ${Colors.textLight()};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {useCallback} from 'react';\n\nimport {DagsterTag} from './RunTag';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nexport function useTagPinning() {\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    validateIsArray,\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', validateIsArray);\n\n  const onToggleTagPin = useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  const isTagPinned = useCallback(\n    (tag: {key: string}) => {\n      return isUnpinnedByDefaultSystemTag(tag.key)\n        ? pinnedSystemTags.indexOf(tag.key) !== -1\n        : unpinnedTags.indexOf(tag.key) === -1;\n    },\n    [pinnedSystemTags, unpinnedTags],\n  );\n\n  return {\n    isTagPinned,\n    onToggleTagPin,\n  };\n}\n\nfunction validateIsArray(value: any) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [];\n}\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Caption,\n  Checkbox,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Mono,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AssetCheckTagCollection, AssetKeyTagCollection} from './AssetTagCollections';\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {RunActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunStateSummary, RunTime, assetKeysForRun, titleForRun} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useTagPinning} from './useTagPinning';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineTag} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\n\nexport const RunRow = ({\n  run,\n  hasCheckboxColumn,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}: {\n  run: RunTableRunFragment;\n  hasCheckboxColumn: boolean;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n  const {isTagPinned, onToggleTagPin} = useTagPinning();\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<PipelineTag, '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({key: 'mode', value: run.mode});\n    }\n    return allTags.map((tag) => {\n      return {...tag, pinned: isTagPinned(tag)};\n    });\n  }, [run, isJob, isTagPinned]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [allTagsWithPinned, run.assetSelection?.length]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {hasCheckboxColumn ? (\n        <td>\n          {canTerminateOrDelete ? (\n            <>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</>\n          ) : null}\n        </td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          <RunTargetLink isJob={isJob} run={run} repoAddress={repoAddressGuess} />\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={Colors.textLight()}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nconst RunTargetLink = ({\n  run,\n  isJob,\n  repoAddress,\n}: {\n  isJob: boolean;\n  run: RunTableRunFragment;\n  repoAddress: RepoAddress | null;\n}) => {\n  return isHiddenAssetGroupJob(run.pipelineName) ? (\n    <Box flex={{gap: 16, alignItems: 'end', wrap: 'wrap'}}>\n      <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n      <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n    </Box>\n  ) : (\n    <PipelineReference\n      isJob={isJob}\n      showIcon\n      pipelineName={run.pipelineName}\n      pipelineHrefContext={repoAddress || 'repo-unknown'}\n    />\n  );\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Icon,\n  NonIdealState,\n  ProductTour,\n  ProductTourPosition,\n  Table,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunRow} from './RunRow';\nimport {RUN_TIME_FRAGMENT} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                hasCheckboxColumn={canTerminateOrDeleteAny}\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n"],"names":["Page","styled","div","withConfig","renderItemAssetKey","assetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","style","display","width","MiddleTruncate","text","displayNameForAssetKey","renderItemAssetCheck","assetCheck","assetDetailsPathForAssetCheck","labelForAssetCheck","check","name","concat","useShowMoreDialog","dialogTitle","items","renderItem","React","showMore","setShowMore","dialog","length","jsxs","Dialog","title","onClose","minWidth","maxWidth","maxHeight","isOpen","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","intent","autoFocus","onClick","undefined","AssetKeyTagCollection","props","assetKeys","useTags","_props_dialogTitle","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","interactive","icon","Box","flex","direction","gap","alignItems","Icon","color","Colors","size","globalAssetGraphPathForAssetsAndDescendants","ButtonLink","underline","AssetCheckTagCollection","assetChecks","CreatedByTagCell","memo","param","repoAddress","tags","onAddTag","CreatedByTag","pluckTagFromList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","tag","DagsterTag","User","type","ScheduleName","SensorName","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","Automaterialize","CreatedBy","AutoObserve","UserDisplay","useLaunchPadHooks","plucked","tagElement","buildTagElement","email","workspacePathFromAddress","token","refineToError","deletePipelineRun","__typename","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","action","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_4__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","deletion1","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_6__","id","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","useRef","useReducer","current","state","dispatch","runIDs","Object","keys","count","terminatableCount","filter","useEffect","destroy","useMutation","DELETE_MUTATION","mutate","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_9__","runList","runId","variables","_state","sent","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","ul","map","li","Mono","slice","buttons","disabled","RunConfigDialog","copyConfig","runConfigYaml","mode","isJob","hasTags","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","minHeight","padding","top","horizontal","Subheading","RunTags","border","left","bottom","CodeMirrorContainer","StyledRawCodeMirror","options","readOnly","lineNumbers","theme","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","_object_spread_props","_object_spread","reexecution1","_define_property","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","_async_to_generator","reexecutionParams","parentRunId","strategy","jsx_runtime","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","run","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","useCopyToClipboard","onCopy","showSharedToaster","useJobReexecution","onCompleted","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","loadEnv","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","jobLink","workspacePipelineLinkForRun","repositoryName","repository","repositoryLocationName","repositoryLocation","JoinedButtons","AnchorButton","Popover","content","Menu","MenuItem","tagName","justifyContent","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","disabledReason","OPEN_LAUNCHPAD_UNKNOWN","position","targetTagName","MenuLink","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","validateIsArray","isArray","isUnpinnedByDefaultSystemTag","startsWith","Namespace","Partition","Backfill","toggleTag","tagsArr","tagKey","indexOf","_to_consumable_array","RunRow","useStateWithStorage","pinnedSystemTags","setPinnedSystemTags","unpinnedTags","setUnpinnedTags","onToggleTagPin","hasCheckboxColumn","canTerminateOrDelete","checked","onToggleChecked","additionalColumns","isHighlighted","hideCreatedBy","repo","useRepositoryForRunWithoutSnapshot","useTagPinning","useCallback","isTagPinned","pipelinesAndJobs","pipelines","find","pipelineOrJob","repoAddressGuess","buildRepoAddress","allTagsWithPinned","allTags","push","pinned","isReexecution","ParentRunId","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","targetBackfill","tagKeys","Set","link","assetSelection","runsPathWithFilters","add","forEach","Row","highlighted","onMouseEnter","onMouseLeave","td","Checkbox","onChange","e","target","HTMLInputElement","shiftKey","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","RunTargetLink","wrap","RunTagsWrapper","Caption","margin","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","tr","isHiddenAssetGroupJob","assetKeysForRun","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","emptyState","allIds","useSelectionReducer","checkedIds","onToggleFactory","onToggleAll","canTerminateOrDeleteAny","selectedFragments","ActionBar","grow","Table","thead","th","paddingTop","paddingBottom","indeterminate","TargetHeader","additionalColumnHeaders","tbody","additionalColumnsForRow","includes","anyFilter","vertical","NonIdealState","description","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","right","hideTabPinningNux","setHideTabPinningNux","ProductTour","ProductTourPosition","BOTTOM_RIGHT","video","dismiss"],"sourceRoot":""}
{"version":3,"file":"static/chunks/956.7246b710d9ecea4b.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/instance/InstanceHealthPage.tsx","webpack://_N_E/../ui-core/src/settings/SettingsLayout.tsx","webpack://_N_E/../ui-core/src/ui/SideNavItem.tsx","webpack://_N_E/../ui-core/src/settings/SettingsLeftPane.tsx","webpack://_N_E/../ui-core/src/settings/SettingsMainPane.tsx","webpack://_N_E/../ui-core/src/settings/SettingsRoot.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Code,\n  Colors,\n  Heading,\n  PageHeader,\n  Spinner,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport CodeMirror from 'codemirror';\nimport {memo, useContext, useMemo} from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .CodeMirror.cm-s-instance-config.cm-s-instance-config {\n    background-color: ${Colors.backgroundDefault()};\n    box-shadow: 0 1px 0 ${Colors.keylineDefault()};\n    color: ${Colors.textDefault()};\n    height: 100%;\n\n    .config-highlight.config-highlight {\n      background-color: ${Colors.backgroundLimeHover()};\n    }\n  }\n`;\n\nexport const InstanceConfigContent = memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const handlers = useMemo(() => {\n    return {\n      onReady: (editor: CodeMirror.Editor) => {\n        const documentHash = document.location.hash;\n        if (documentHash) {\n          const target = new RegExp(`^${documentHash.slice(1)}:`);\n          const cursor = editor.getSearchCursor(target);\n          const found = cursor.findNext();\n          if (found) {\n            editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n            editor.scrollIntoView(cursor.from());\n          }\n        }\n      },\n    };\n  }, []);\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border=\"bottom\"\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n        <QueryRefreshCountdown refreshState={refreshState} />\n      </Box>\n      {/* Div wrapper on CodeMirror to allow entire page to scroll */}\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <StyledRawCodeMirror\n          value={config || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          handlers={handlers}\n          theme={['instance-config']}\n        />\n      </div>\n    </>\n  );\n});\n\nexport const InstanceConfigRoot = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"config\" />} />\n      <InstanceConfigContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfigRoot;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Heading, PageHeader, Subheading} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nexport const InstanceHealthPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.textLight()}}>\n          Loading…\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>Daemon statuses</Subheading>\n        <div>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </div>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\nexport const InstanceHealthPage = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"health\" />} />\n      <InstanceHealthPageContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, Heading, PageHeader} from '@dagster-io/ui-components';\n\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\ninterface Props {\n  left: React.ReactNode;\n  main: React.ReactNode;\n}\n\nexport const SettingsLayout = ({left, main}: Props) => {\n  return (\n    <Box style={{height: '100%', overflow: 'hidden'}} flex={{direction: 'column'}}>\n      <PageHeader\n        title={<Heading>Settings</Heading>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n      />\n      <Box style={{overflow: 'hidden'}} flex={{direction: 'row', grow: 1}}>\n        <Box style={{flex: '0 0 292px', overflowY: 'auto'}} border=\"right\">\n          {left}\n        </Box>\n        <Box\n          flex={{direction: 'column', alignItems: 'stretch'}}\n          style={{flex: 1, overflow: 'hidden'}}\n        >\n          {main}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import {Box, Colors, IconWrapper, Tooltip, UnstyledButton} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface SideNavItemInterface {\n  key: string;\n  icon: React.ReactNode;\n  label: React.ReactNode;\n  disabled?: boolean;\n  rightElement?: React.ReactNode;\n  tooltip?: string;\n  onClick?: () => void;\n}\n\nexport interface SideNavItemLinkConfig extends SideNavItemInterface {\n  type: 'link';\n  path: string;\n}\n\nexport interface SideNavItemButtonConfig extends SideNavItemInterface {\n  type: 'button';\n  onClick: () => void;\n}\n\nexport type SideNavItemConfig = SideNavItemLinkConfig | SideNavItemButtonConfig;\n\ninterface Props {\n  active?: boolean;\n  item: SideNavItemConfig;\n}\n\nexport const SideNavItem = (props: Props) => {\n  const {active = false, item} = props;\n  const {type, icon, label, rightElement, tooltip = '', disabled = false} = item;\n  const content = (\n    <Box\n      padding={{vertical: 4, left: 12, right: 8}}\n      flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n    >\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}} className=\"iconAndLabel\">\n        {icon}\n        {label}\n      </Box>\n      <div>{rightElement}</div>\n    </Box>\n  );\n\n  if (type === 'link' && !disabled) {\n    return (\n      <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n        <StyledSideNavLink to={item.path} $active={active}>\n          {content}\n        </StyledSideNavLink>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n      <StyledSideNavButton disabled={disabled} onClick={item.onClick}>\n        {content}\n      </StyledSideNavButton>\n    </Tooltip>\n  );\n};\n\nconst StyledSideNavLink = styled(Link)<{$active: boolean}>`\n  background-color: ${({$active}) => ($active ? Colors.backgroundBlue() : 'transparent')};\n  border-radius: 8px;\n  color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n  display: block;\n  line-height: 20px;\n  text-decoration: none;\n  transition: 100ms background-color linear;\n  user-select: none;\n\n  :focus {\n    outline: none;\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLight()};\n  }\n\n  :hover,\n  :active {\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLightHover()};\n    color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    text-decoration: none;\n  }\n\n  .iconAndLabel {\n    ${IconWrapper} {\n      background-color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    }\n  }\n`;\n\nconst StyledSideNavButton = styled(UnstyledButton)`\n  background-color: transparent;\n  border-radius: 8px;\n  color: ${Colors.textDefault()};\n  display: block;\n  font-size: 14px;\n  line-height: 20px;\n  text-decoration: none;\n  transition: 100ms background-color linear;\n  user-select: none;\n  width: 100%;\n\n  :focus {\n    outline: none;\n    background-color: ${Colors.backgroundLight()};\n  }\n\n  :hover,\n  :active {\n    background-color: ${Colors.backgroundLightHover()};\n    color: ${Colors.textDefault()};\n    text-decoration: none;\n  }\n\n  ${IconWrapper} {\n    background-color: ${Colors.textDefault()};\n  }\n`;\n","import {Box, Icon} from '@dagster-io/ui-components';\nimport {useState} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {UserSettingsDialog} from '../app/UserSettingsDialog';\nimport {getVisibleFeatureFlagRows} from '../app/getVisibleFeatureFlagRows';\nimport {SideNavItem, SideNavItemConfig} from '../ui/SideNavItem';\n\nconst items: SideNavItemConfig[] = [\n  {\n    key: 'code-locations',\n    type: 'link',\n    icon: <Icon name=\"code_location\" />,\n    label: 'Code locations',\n    path: '/settings/locations',\n  },\n  {\n    key: 'daemons',\n    type: 'link',\n    icon: <Icon name=\"sync_alt\" />,\n    label: 'Daemons',\n    path: '/settings/daemons',\n  },\n  {\n    key: 'concurrency-limits',\n    type: 'link',\n    icon: <Icon name=\"stacks\" />,\n    label: 'Concurrency limits',\n    path: '/settings/concurrency',\n  },\n  {\n    key: 'config',\n    type: 'link',\n    icon: <Icon name=\"tune\" />,\n    label: 'Configuration (read-only)',\n    path: '/settings/config',\n  },\n];\n\nexport const SettingsLeftPane = () => {\n  const {pathname} = useLocation();\n  const [showUserSettings, setShowUserSettings] = useState(false);\n\n  const userSettingsItem: SideNavItemConfig = {\n    key: 'user-settings',\n    type: 'button',\n    icon: <Icon name=\"account_circle\" />,\n    label: 'User settings',\n    onClick: () => setShowUserSettings(true),\n  };\n\n  return (\n    <Box padding={12}>\n      <Box padding={{bottom: 12}}>\n        {items.map((item) => {\n          return (\n            <SideNavItem\n              key={item.key}\n              item={item}\n              active={item.type === 'link' && pathname === item.path}\n            />\n          );\n        })}\n      </Box>\n      <Box padding={{top: 16}} border=\"top\">\n        <>\n          <SideNavItem item={userSettingsItem} />\n          <UserSettingsDialog\n            isOpen={showUserSettings}\n            onClose={() => setShowUserSettings(false)}\n            visibleFlags={getVisibleFeatureFlagRows()}\n          />\n        </>\n      </Box>\n    </Box>\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {CodeLocationsPageContent} from '../instance/CodeLocationsPage';\nimport {InstanceConcurrencyPageContent} from '../instance/InstanceConcurrency';\nimport {InstanceConfigContent} from '../instance/InstanceConfig';\nimport {InstanceHealthPageContent} from '../instance/InstanceHealthPage';\n\nexport const SettingsMainPane = () => {\n  const {flagSettingsPage} = useFeatureFlags();\n  if (!flagSettingsPage) {\n    return <Redirect to=\"/locations\" />;\n  }\n\n  return (\n    <Box flex={{direction: 'column', alignItems: 'stretch'}} style={{flex: 1, overflow: 'hidden'}}>\n      <Switch>\n        <Route path=\"/settings/locations\">\n          <CodeLocationsPageContent />\n        </Route>\n        <Route path=\"/settings/daemons\">\n          <InstanceHealthPageContent />\n        </Route>\n        <Route path=\"/settings/concurrency\">\n          <InstanceConcurrencyPageContent />\n        </Route>\n        <Route path=\"/settings/config\">\n          <InstanceConfigContent />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/settings/locations\" />\n        </Route>\n      </Switch>\n    </Box>\n  );\n};\n","import {SettingsLayout} from './SettingsLayout';\nimport {SettingsLeftPane} from './SettingsLeftPane';\nimport {SettingsMainPane} from './SettingsMainPane';\n\nexport const SettingsRoot = () => {\n  return <SettingsLayout left={<SettingsLeftPane />} main={<SettingsMainPane />} />;\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n"],"names":["Page","styled","div","withConfig","InstanceConfigStyle","createGlobalStyle","Colors","InstanceConfigContent","memo","useTrackPageView","useDocumentTitle","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","handlers","useMemo","onReady","editor","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","jsx","Box","padding","vertical","horizontal","border","flex","direction","alignItems","justifyContent","Subheading","Code","style","fontSize","version","QueryRefreshCountdown","overflow","StyledRawCodeMirror","value","options","readOnly","lineNumbers","mode","theme","Spinner","purpose","InstanceConfigRoot","pageTitle","useContext","InstancePageContext","PageHeader","title","Heading","tabs","InstanceTabs","tab","__webpack_exports__","gql","InstanceHealthPageContent","queryData","INSTANCE_HEALTH_QUERY","loading","DaemonList","daemonStatuses","daemonHealth","allDaemonStatuses","color","InstanceHealthPage","INSTANCE_HEALTH_FRAGMENT","SettingsLayout","param","left","main","jsx_runtime","height","right","ReloadAllButton","label","grow","overflowY","SideNavItem","props","_props_active","active","item","type","icon","rightElement","tooltip","_item_tooltip","_item_disabled","disabled","content","gap","Tooltip","canShow","placement","display","StyledSideNavButton","onClick","StyledSideNavLink","path","$active","Link","IconWrapper","UnstyledButton","items","key","Icon","name","SettingsLeftPane","pathname","useLocation","useState","showUserSettings","setShowUserSettings","userSettingsItem","bottom","map","top","UserSettingsDialog","isOpen","onClose","visibleFlags","getVisibleFeatureFlagRows","SettingsMainPane","useFeatureFlags","flagSettingsPage","Switch","Route","CodeLocationsPageContent","InstanceConcurrencyPageContent","Redirect","SettingsRoot","settings_SettingsRoot"],"sourceRoot":""}